import telebot
from telebot import types
import openai
import time


GPT_KEY = "KEY"
TG_KEY = "KEY"

bot = telebot.TeleBot(TG_KEY)
openai.api_key = GPT_KEY

def main():
    @bot.message_handler(commands=['start'])
    def start(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —á–∞—Ç üí¨")
        btn2 = types.KeyboardButton("–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É üñºÔ∏è")
        markup.add(btn1, btn2)
        bot.send_message(
            message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, —è - —á–∞—Ç–±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —á–∞—Ç–∞ GPT.", reply_markup=markup)
        
        filew = open('logs.txt', 'w', encoding='utf-8')
        filew.write(
            f'{message.from_user.username} | {message.text} | {time.strftime("%Y-%m-%d %H:%M")}')
        filew.close()


    @bot.message_handler(content_types=['text'])
    def get_text_messages(message):
        if message.text == "–ù–∞—á–∞—Ç—å —á–∞—Ç üí¨":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω—É üñºÔ∏è")
            back = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
            markup.add(btn1, back)

            # Json chat
            getMessage = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "user", "content": message.text}
                ]
            )
            bot.send_message(message.from_user.id,
                            getMessage.choices[0].message.content)
            
            filew = open('logs.txt', 'a', encoding='utf-8')
            filew.write(
                f'{message.from_user.username} | {message.text} | {time.strftime("%Y-%m-%d %H:%M")} \n')
            filew.close()

        elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —á–∞—Ç üí¨")
            btn2 = types.KeyboardButton("–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É üñºÔ∏è")
            markup.add(btn1, btn2)
            bot.send_message(
                message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
            
            filew = open('logs.txt', 'a', encoding='utf-8')
            filew.write(
                f'{message.from_user.username} | {message.text} | {time.strftime("%Y-%m-%d %H:%M")} \n')
            filew.close()

        elif message.text == "–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É üñºÔ∏è":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —á–∞—Ç üí¨")
            btn2 = types.KeyboardButton("–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É üñºÔ∏è")
            markup.add(btn1, btn2)
            bot.send_message(
                message.chat.id, text="–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å 'img-<–≤–∞—à –∑–∞–ø—Ä–æ—Å>'", reply_markup=markup)
            
            filew = open('logs.txt', 'a', encoding='utf-8')
            filew.write(
                f'{message.from_user.username} | {message.text} | {time.strftime("%Y-%m-%d %H:%M")} \n')
            filew.close()


        elif str(message.text).split('-')[0] == 'img':
            bot.send_message(message.from_user.id, "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..‚åõÔ∏è")
            getImage = openai.Image.create(
                prompt=str(message.text).split('-')[1],
                n=2,
                size="1024x1024"
            )
            bot.delete_message(message.chat.id, message.message_id + 1)
            bot.send_photo(message.from_user.id, getImage.data[0].url)

            filew = open('logs.txt', 'a', encoding='utf-8')
            filew.write(
                f'{message.from_user.username} | {message.text} | {time.strftime("%Y-%m-%d %H:%M")} \n')
            filew.close()

        else:
            bot.send_message(message.from_user.id, "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞..‚åõÔ∏è")
            # Json chat
            getMessage = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=[
                    {"role": "user", "content": message.text}
                ]
            )
            bot.delete_message(message.chat.id, message.message_id + 1)
            bot.send_message(message.from_user.id,
                            getMessage.choices[0].message.content)
            
            filew = open('logs.txt', 'a', encoding='utf-8')
            filew.write(
                f'{message.from_user.username} | {message.text} | {time.strftime("%Y-%m-%d %H:%M")} \n')
            filew.close()


    bot.polling(none_stop=True, interval=0)


if __name__ == '__main__':
    try:
        main()
    except:
        main()
